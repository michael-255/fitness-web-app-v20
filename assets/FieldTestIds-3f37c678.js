import{Q as u}from"./QSelect-ddac23b4.js";import{k as m,F as _,r as f,l as y,D as g,m as t,G as s,L as l,M as h,v,x as o,p as k,bA as x,t as d}from"./index-505869b6.js";import{u as B}from"./action-c55216f5.js";import"./QItem-df2a3384.js";import"./QItemLabel-86187c1c.js";import"./QMenu-d6393f3d.js";import"./selection-41a8b4ed.js";const I=d("div",{class:"text-weight-bold text-body1"},"Tests",-1),S={key:0},V={key:1},b=d("p",null,"Tests that are stored by the Example record.",-1),M=m({__name:"FieldTestIds",props:{inspecting:{type:Boolean}},setup(T){const{log:p}=_(),r=B(),n=f([]);return y(async()=>{try{n.value=await g.getTestIdsOptions()}catch(a){p.error("Error with test ids field",a)}}),(a,i)=>(t(),s(l,null,[I,a.inspecting?(t(),s("div",S,[(t(!0),s(l,null,h(o(r).record.testIds,(e,c)=>(t(),s("li",{key:c,class:"q-ml-sm"},v(e),1))),128))])):(t(),s("div",V,[b,k(u,{modelValue:o(r).record.testIds,"onUpdate:modelValue":i[0]||(i[0]=e=>o(r).record.testIds=e),rules:[e=>o(x).safeParse(e).success||"Required"],options:n.value,counter:"",multiple:"","emit-value":"","map-options":"","options-dense":"",dense:"",outlined:"",color:"primary"},null,8,["modelValue","rules","options"])]))],64))}});export{M as default};
